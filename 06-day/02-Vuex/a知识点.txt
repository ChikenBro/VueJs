Vuex是一个专门为Vue.js应用程序开发的状态管理工具
  Vuex:响应式
  因为自己封装的不是响应式 Vue.prototype.name = 'zrf'

  状态管理:需要把多个组件共享的变量全部储存在一个对象里面
  管理什么转态呢？
  eg:
    用户的登录状态、用户名称、头像、地理位置
    商品的购物车、商品的收藏

单界面状态管理
  State->View->Actions->State

  State: 状态 data中的属性
  View: 视图层,可以针对State的变化,显示不同的信息
  Actions：这里的Actions主要是用户的各种操作 eg 点击、输入

多界面状态管理
  安装Vuex: npm install vuex --save
  一般在src里新建store文件夹 初始化vuex

  官方推荐通过Mutation/Actions来修改State,因为可以用Devtools记录,如果涉及到异步操作,只能通过Actions
才能记录State的变化

State单一状态树(Single Source of Truth)
  建议只使用一个store

Mutation响应规则
  前提是一开始初始化好的
  每个state都有一个Dep监听属性是否发送变化,一旦发生改变,所有用到该属性的界面都会发生刷新
    页面不会添加这个属性
    state.info['address'] = '07'
    
    这种是响应式的
    Vue.set(state.info, 'address', '07')

    做不到响应式
    delete state.info.age

    这种是响应式的
    Vue.delete(state.info, 'age')

推荐mutations的常量类型写法 
  export const INCREMEMT = 'increment'、
  import * as obj from "./mutations-types"
  然后直接使用INCREMENT

对象的解构
const {var1,var2}= obj
